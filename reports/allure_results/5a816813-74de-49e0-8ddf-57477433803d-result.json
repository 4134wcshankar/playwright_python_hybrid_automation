{"name": "test_select_cars[chrome-Toyota-Toyota Carss]", "status": "failed", "statusDetails": {"message": "AssertionError: Not on the correct page as the title is not matching\nassert 'Toyota Cars' == 'Toyota Carss'\n  \n  - Toyota Carss\n  ?            -\n  + Toyota Cars", "trace": "self = <test_cases.car_model_test.Test_CarWale object at 0x1030c7770>, page = <Page url='https://www.carwale.com/toyota-cars/'>, carBrand = 'Toyota', carTitle = 'Toyota Carss'\n\n    @allure.feature(\"Select Cars Test\")\n    @allure.severity(allure.severity_level.CRITICAL)\n    @pytest.mark.parametrize(\"carBrand,carTitle\",data_provider_excels_json.get_data(\"NewCarsTest\"))\n    def test_select_cars(self,page,carBrand,carTitle):\n        with allure.step(\"*****Executing Select Cars Test*****\"):\n            home = HomePage(page)\n            car = CarBase(page)\n    \n            print(f\"Car brand is {carBrand}\")\n            if carBrand == \"BMW\":\n                home.find_new_cars().go_to_BMW()\n            elif carBrand == \"MG\":\n                home.find_new_cars().go_to_MG()\n            elif carBrand == \"Honda\":\n                home.find_new_cars().go_to_honda()\n            elif carBrand == \"Toyota\":\n                home.find_new_cars().go_to_toyota()\n    \n            title = car.get_title()\n            print(f\"Car Title is {title}\")\n>           assert title == carTitle, \"Not on the correct page as the title is not matching\"\nE           AssertionError: Not on the correct page as the title is not matching\nE           assert 'Toyota Cars' == 'Toyota Carss'\nE             \nE             - Toyota Carss\nE             ?            -\nE             + Toyota Cars\n\ntest_cases/car_model_test.py:45: AssertionError"}, "steps": [{"name": "*****Executing Select Cars Test*****", "status": "failed", "statusDetails": {"message": "AssertionError: Not on the correct page as the title is not matching\nassert 'Toyota Cars' == 'Toyota Carss'\n  \n  - Toyota Carss\n  ?            -\n  + Toyota Cars\n", "trace": "  File \"/Users/sankar_admin/python_test_env/python_playwright_hybrid_automation/playwright_python_hybrid_automation/test_cases/car_model_test.py\", line 45, in test_select_cars\n    assert title == carTitle, \"Not on the correct page as the title is not matching\"\n"}, "steps": [{"name": "Moving to an Element newCar_XPATH", "status": "passed", "start": 1744563807411, "stop": 1744563807483}, {"name": "Clicking on an Element findNewCars_XPATH", "status": "passed", "start": 1744563807483, "stop": 1744563807969}, {"name": "Clicking on an Element toyota_XPATH", "status": "passed", "start": 1744563807969, "stop": 1744563809134}], "start": 1744563807411, "stop": 1744563809962}], "attachments": [{"name": "log", "source": "647c68dd-c47e-4622-aafc-851970681f42-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "6d11a1da-e51f-4db2-abca-dc232d9a5178-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser", "value": "'chrome'"}, {"name": "carBrand", "value": "'Toyota'"}, {"name": "carTitle", "value": "'Toyota Carss'"}], "start": 1744563807410, "stop": 1744563809963, "uuid": "bbe2a20f-d121-478d-bda2-167624cb1882", "historyId": "c99b7dd60339a20017d63a63cf6f6074", "testCaseId": "2560f4e643a62e0d79fc9aff01dbe467", "fullName": "test_cases.car_model_test.Test_CarWale#test_select_cars", "labels": [{"name": "severity", "value": "critical"}, {"name": "feature", "value": "Select Cars Test"}, {"name": "tag", "value": "@pytest.mark.usefixtures('log_on_failure', 'page')"}, {"name": "parentSuite", "value": "test_cases"}, {"name": "suite", "value": "car_model_test"}, {"name": "subSuite", "value": "Test_CarWale"}, {"name": "host", "value": "MacBookPro.lan"}, {"name": "thread", "value": "8091-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_cases.car_model_test"}]}